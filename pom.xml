<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.jarvan</groupId>
    <artifactId>springboot-demo-docker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springboot-demo-docker</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>8</java.version>
        <!--项目前缀名称-->
        <docker.image.prefix>jarvan</docker.image.prefix>

        <!--docker相关配置-->
        <docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
        <!--docker.baseImage：为jre8的基础镜像 8-jre-alpine只有10m不到 java:8有600多m -->
        <docker.baseImage>openjdk:8-jre-alpine</docker.baseImage>
<!--        <docker.baseImage>java:8</docker.baseImage>-->
        <!--是在容器里挂载的目录-->
        <docker.volumes>/test</docker.volumes>
        <!--加快随机数产生过程-->
        <docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd>
        <!--设置JVM启动参数 可按需要配置，-->
        <docker.java.opts>-Xms128m -Xmx128m</docker.java.opts>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>
                    <dockerHost>http://xxx.xxx.xxx.xxx:2375</dockerHost>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!--强制在每次新的构建上覆盖镜像tags-->
                    <forceTags>true</forceTags>
                    <baseImage>${docker.baseImage}</baseImage>
                    <!--配置挂载目录-->
<!--                    <volumes>${docker.volumes}</volumes>-->

                    <!--下面两种方式都可以-->
                    <!--方式1:使用dockerfile方式-->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <!--方式2:用配置，不需要创建dockerfile文件-->
<!--                    <entryPoint>["sh", "-c", "java ${docker.java.opts} ${docker.java.security.egd} -jar /${project.build.finalName}.jar"]</entryPoint>-->

                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
